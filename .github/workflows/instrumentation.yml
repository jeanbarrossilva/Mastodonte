name: Instrumented tests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: 17

      - name: Set up Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Set up AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create and generate AVD snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          disable-animations: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          force-avd-creation: false
          script: echo "Generated AVD snapshot for caching."
          target: ${{ matrix.target }}

      - name: Run instrumented tests
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          disk-size: 2000M
          heap-size: 600M
          script: ./gradlew connectedCheck
          target: ${{ matrix.target }}
    strategy:
      matrix:
        api-level: [34]
        arch: [x86_64]
        target: [google_apis]
